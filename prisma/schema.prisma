// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
 url       = "prisma://accelerate.prisma-data.net/?api_key=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcGlfa2V5IjoiNTM3YWYwMmYtYzEyYi00YjE1LWE3ZTktZTg2MTQ3MTEwZGZlIiwidGVuYW50X2lkIjoiMzU4MmU0ZWQ0MWY1Mjc0Njk2NDY1NDU4NzMzNjNmMzVkMWQ1ZTgyMjg4ZjI0NDRiMzcxOTcxNjgxMzIzMGRhZCIsImludGVybmFsX3NlY3JldCI6ImE5Zjk5NmJmLTZhZTAtNDMyZC04ZmJkLThmZWUwNzc0MDUyZCJ9.fd8c308VFKVf-S52BOqeeYXIxwvD72HDiLjxs3cPZlw"
 directUrl = env("DIRECT_DATABASE_URL")
}

model User {
  id       String   @id @default(uuid())
  email    String   @unique
  name     String?
  role     String? 
  mobile   String?
  joinedAt DateTime @default(now())
  profileImage String?
  location String?
  test    Test[]
  payment Payment[]
   testResults TestResult[]
}
model Test {
  id          Int        @id @default(autoincrement())
  title        String
  description String?
  duration    Int
  price       Int
  userId     String
  startAt     DateTime
  published  Boolean    @default(false)

  user User @relation(fields: [userId], references: [id])
  questions   Question[]
  payment     Payment[]
   testResults TestResult[]
}

model Question {
  id      Int    @id @default(autoincrement())
  question String
  options  String[]
  answer   Int
  testId   Int
  test     Test   @relation(fields: [testId], references: [id])
}


// 
model Payment {
  id         Int      @id @default(autoincrement())
  userId     String
  testId     Int
  amount     Float
  status     String   // e.g., "pending", "completed", "failed"
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
  test       Test     @relation(fields: [testId], references: [id])
}

model TestResult {
  id                Int      @id @default(autoincrement())
  userId            String
  testId            Int
  timeTaken         String
  questionsAttempted Int
  correctAnswers    Int
  wrongAnswers      Int
  overallResult     Float
  createdAt         DateTime @default(now())
  user              User     @relation(fields: [userId], references: [id])
  test              Test     @relation(fields: [testId], references: [id])
}